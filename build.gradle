buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("io.freefair.gradle:lombok-plugin:4.1.3")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE")
        classpath("gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.9.0")
        classpath("net.saliman:gradle-cobertura-plugin:3.0.0")
    }
}

allprojects {
    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'jacoco'
    apply plugin: 'project-report'
    repositories {
        jcenter()
    }
}

subprojects {

    group = 'com.genius.primavera'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'net.saliman.cobertura'
    apply plugin: 'com.github.kt3k.coveralls'

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile).each {
        it.options.compilerArgs.add('--enable-preview')
    }

    test {
        jvmArgs(['--enable-preview'])
    }

    dependencies {
        compile group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
        compile group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
        compile group: 'org.jetbrains', name: 'annotations', version: '16.0.1'
        compile group: 'javax.inject', name: 'javax.inject', version: '1'
        compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.7'
        compile group: 'org.jooq', name: 'jool', version: '0.9.14'
        compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
        compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
        testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '2.1'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.25.1'
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.25.1'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
        annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_13
        targetCompatibility = JavaVersion.VERSION_13
    }
}


task jacocoRootReport(type: JacocoReport) {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn = subprojects.test
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        html.enabled = true
        csv.enabled true
        xml.enabled = true
    }
    onlyIf = {
        true
    }
}
